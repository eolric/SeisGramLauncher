# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'SeisGramLauncher.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        # MainWindow.resize(391, 201)
        MainWindow.setFixedSize(471, 221)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setStyleSheet("*{\n"
"    font: 7.4pt \"Century Gothic\";\n"
"}\n"
"\n"
"QWidget{\n"
"    background-color: rgb(188, 188, 188);\n"
"}\n"
"\n"
"QFrame#fLaunch{\n"
"    background-image: url(:/images/images/ssi-logo-medium.png);\n"
"    background-color:rgb(229, 229, 229);    \n"
"    background-position: center; /* Center the image */\n"
"     background-repeat: no-repeat; /* Do not repeat the image */\n"
"     background-size: cover; /* Resize the background image to cover the entire container */\n"
"    border-radius: 10px;\n"
"}\n"
"\n"
"QLabel{\n"
"    background-color:  rgba(255, 255, 255, 0.8);\n"
"    font-weight: bold;\n"
"    font-size: 10pt;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"QLineEdit{\n"
"    background-color: rgba(255, 255, 255, 0.7);\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"QCheckBox{\n"
"    background-color:  rgba(255, 255, 255, 0.75);\n"
"    font-weight: bold;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"QTextEdit{\n"
"    background-color:  rgba(255, 255, 255, 0.7);\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"QPushButton{\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"  background: #2079b0;\n"
"}")
        self.centralwidget.setObjectName("centralwidget")
        self.fLaunch = QtWidgets.QFrame(self.centralwidget)
        self.fLaunch.setGeometry(QtCore.QRect(10, 10, 451, 201))
        self.fLaunch.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.fLaunch.setFrameShadow(QtWidgets.QFrame.Raised)
        self.fLaunch.setObjectName("fLaunch")
        self.teIPs = QtWidgets.QTextEdit(self.fLaunch)
        self.teIPs.setGeometry(QtCore.QRect(10, 30, 161, 111))
        self.teIPs.setObjectName("teIPs")
        self.lIPs = QtWidgets.QLabel(self.fLaunch)
        self.lIPs.setGeometry(QtCore.QRect(10, 10, 130, 17))
        self.lIPs.setObjectName("lIPs")
        self.lStation = QtWidgets.QLabel(self.fLaunch)
        self.lStation.setGeometry(QtCore.QRect(190, 30, 61, 20))
        self.lStation.setObjectName("lStation")
        self.cbLineaBase = QtWidgets.QCheckBox(self.fLaunch)
        self.cbLineaBase.setGeometry(QtCore.QRect(10, 170, 161, 21))
        self.cbLineaBase.setObjectName("cbLineaBase")
        self.cbVisual = QtWidgets.QCheckBox(self.fLaunch)
        self.cbVisual.setGeometry(QtCore.QRect(180, 170, 161, 21))
        self.cbVisual.setObjectName("cbVisual")
        self.bOK = QtWidgets.QPushButton(self.fLaunch)
        self.bOK.setEnabled(False)  # Para desactivar o activar el botón
        self.bOK.setGeometry(QtCore.QRect(360, 170, 75, 23))
        self.bOK.setObjectName("bOK")
        self.eStation = QtWidgets.QLineEdit("SSI,E4F,321",self.fLaunch)  #se agrega el texto que queremos que tenga por defecto la entrada
        self.eStation.setGeometry(QtCore.QRect(330, 30, 101, 20))
        self.eStation.setClearButtonEnabled(True)
        # self.eStation.setMaxLength(3)  # Para fijar un máximo de caracteres a igresar en el lineEdit
        # self.eStation.setFont(QtGui.QFont("Century Gothic", 10))  # Para cambiar estilo y tamaño de letra
        self.eStation.setObjectName("eStation")
        self.eNet = QtWidgets.QLineEdit("XX",self.fLaunch)
        self.eNet.setGeometry(QtCore.QRect(330, 60, 101, 20))
        self.eNet.setClearButtonEnabled(True)
        self.eNet.setObjectName("eNet")
        self.eLocation = QtWidgets.QLineEdit("00",self.fLaunch)
        self.eLocation.setGeometry(QtCore.QRect(330, 90, 101, 20))
        self.eLocation.setClearButtonEnabled(True)
        self.eLocation.setObjectName("eLocation")
        self.eCh = QtWidgets.QLineEdit("HN",self.fLaunch)
        self.eCh.setGeometry(QtCore.QRect(330, 120, 101, 20))
        self.eCh.setClearButtonEnabled(True)
        self.eCh.setObjectName("eCh")
        # if self.eStation.text() != "":
        #     self.bOK.setEnabled(True)
        self.lNet = QtWidgets.QLabel(self.fLaunch)
        self.lNet.setGeometry(QtCore.QRect(190, 60, 81, 20))
        self.lNet.setObjectName("lNet")
        self.lLocation = QtWidgets.QLabel(self.fLaunch)
        self.lLocation.setGeometry(QtCore.QRect(190, 90, 81, 20))
        self.lLocation.setObjectName("lLocation")
        self.lCh = QtWidgets.QLabel(self.fLaunch)
        self.lCh.setGeometry(QtCore.QRect(190, 120, 121, 20))
        self.lCh.setObjectName("lCh")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "SeisgramLauncher"))
        self.lIPs.setText(_translate("MainWindow", "Direcciones IP"))
        self.lStation.setText(_translate("MainWindow", "Stations"))
        self.cbLineaBase.setText(_translate("MainWindow", "No eliminar línea base"))
        self.cbVisual.setText(_translate("MainWindow", "Visualización individual"))
        self.bOK.setText(_translate("MainWindow", "OK"))
        self.lNet.setText(_translate("MainWindow", "Network"))
        self.lLocation.setText(_translate("MainWindow", "Location"))
        self.lCh.setText(_translate("MainWindow", "Label Channel"))
import source


# if __name__ == "__main__":
#     import sys
#     app = QtWidgets.QApplication(sys.argv)
#     MainWindow = QtWidgets.QMainWindow()
#     ui = Ui_MainWindow()
#     ui.setupUi(MainWindow)
#     MainWindow.show()
#     sys.exit(app.exec_())
